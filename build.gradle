/*
 * Tinkers Mechworks
 * Master build file
 * Based on TConstruct master build file
 * Authors: boni, Sunstrike, ProgWML6, fuj1n
 * Help from AbrarSyed
 */

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven'

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'forge'
        url 'http://files.minecraftforge.net/maven'
    }
	maven {
		name "Tehnut Maven FS"
		url "http://maven.tehnut.info"
    }
}

group = "slimeknights.tmechworks"

version = "${minecraft_version}-${mod_version}"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP,CORE,PULSAR'
            property 'forge.logging.console.level', 'debug'

            mods {
                tmechworks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP,CORE,PULSAR'
            property 'forge.logging.console.level', 'debug'

            mods {
                tmechworks {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version

	compile fg.deobf("slimeknights.mantle:Mantle:${minecraft_version}-${mantle_version}")

    //compile fg.deobf("slimeknights:TConstruct:${minecraft_version}-${tinkers_version}")
	
	// compile against the JEI API
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

    // Compile against the Hwyla API, but do not include it at runtime
    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}:api")
    // At runtime, use the full Hwyla jar
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")
}

sourceSets {
    main {
        resources {
            srcDir 'src/resources'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "MCversion", minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // replace version and mcversion
        expand 'version': mod_version, 'MCversion': minecraft_version, 'forge_version': forge_version_toml
    }

    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes([
			"Specification-Title"		: "Tinkers' Mechworks",
			"Specification-Vendor"		: "Slime Knights",
			"Specification-Version"		: "1", // We are version 1 of ourselves
			"Implementation-Title"		: project.name,
			"Implementation-Version"	: project.version,
			"Implementation-Vendor"		: "Slime Knights",
			"Implementation-Timestamp"	: new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
    }
}

// Create deobf dev jars
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}