/*
 * Tinkers Mechworks
 * Master build file
 * Based on TConstruct master build file
 * Authors: boni, Sunstrike, ProgWML6, fuj1n
 * Help from AbrarSyed
 */

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'forge'
        url 'http://files.minecraftforge.net/maven'
    }
	maven {
		name "Tehnut Maven FS"
		url "http://tehnut.info/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "slimeknights"

// define the peroperties file
ext.configFile = file "build.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = 'run/'
    replace '${version}', config.mod_version
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#			stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.mappings_version
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    deobfCompile "slimeknights.mantle:Mantle:${config.minecraft_version_short}-${config.mantle_version}"
    deobfCompile "slimeknights:TConstruct:${config.minecraft_version}-${config.tinkers_version}"
	
	// compile against the JEI API
    deobfCompile "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
	
    compile files("libs/Hwyla-1.8.23-B38_1.12.jar")
}

sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "MCversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'MCversion': project.minecraft.version
            }

            // copy everything else
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

// Add Access Transformers Manifest
jar {
    manifest {
        //attributes 'FMLAT': 'tconstruct_at.cfg'
    }
}

// Create deobf dev jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        //attributes 'FMLAT': 'tconstruct_at.cfg'
    }
}

artifacts {
    archives deobfJar
}